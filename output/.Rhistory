scale_fill_viridis() +
theme_bw() +
ggtitle("Frequency of Land vs. Structure Tax Value") +
theme(legend.position="right") +
xlim(0, 5*10^6) +
ylim(0, 5*10^6)
ggplot(df_properties, aes(tax_landvalue, tax_structurevalue))+
geom_hex(bins = 30) + coord_fixed() +
scale_fill_gradientn(name = "Log Count", trans = "log10",
breaks = 10^(0:6), colors = c("#440154","#21908d","#fde725")) +
theme_bw() +
ggtitle("Log Frequency Land vs. Structure Tax Value") +
theme(legend.position="right") +
xlim(0, 5*10^6) +
ylim(0, 5*10^6)
df_properties[,lat:= latitude/1e06]
df_properties[,lon:= longitude/1e06]
ggplot(df_properties, aes(lat, lon))+
geom_hex(bins = 200) + coord_fixed() +
scale_fill_gradientn(name = "Number of Properties",
breaks = 250*(0:8), colors = c("#440154","#21908d","#fde725")) +
theme_bw() +
ggtitle("Log Frequency Land vs. Structure Tax Value") +
theme(legend.position="right")
lat <- range(df_properties$latitude/1e06,na.rm=T)
lon <- range(df_properties$longitude/1e06,na.rm=T)
tmp <- df_properties %>%
select(id_parcel,longitude,latitude) %>%
mutate(lon=longitude/1e6,lat=latitude/1e6) %>%
select(id_parcel,lat,lon) %>%
left_join(df_transactions,by="id_parcel")
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE, clusterOptions = markerClusterOptions()) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE, clusterOptions = markerClusterOptions(), radius=log(total_taxvalue)) %>%
addMiniMap()
lat <- range(df_properties$latitude/1e06,na.rm=T)
lon <- range(df_properties$longitude/1e06,na.rm=T)
tmp <- df_properties %>%
select(id_parcel,longitude,latitude) %>%
mutate(lon=longitude/1e6,lat=latitude/1e6) %>%
select(id_parcel,lat,lon, total_taxvalue) %>%
left_join(df_transactions,by="id_parcel")
lat <- range(df_properties$latitude/1e06,na.rm=T)
lon <- range(df_properties$longitude/1e06,na.rm=T)
tmp <- df_properties %>%
select(id_parcel,longitude,latitude, total_taxvalue) %>%
mutate(lon=longitude/1e6,lat=latitude/1e6) %>%
select(id_parcel,lat,lon, total_taxvalue) %>%
left_join(df_transactions,by="id_parcel")
lat <- range(df_properties$latitude/1e06,na.rm=T)
lon <- range(df_properties$longitude/1e06,na.rm=T)
tmp <- df_properties %>%
select(id_parcel,longitude,latitude, tax_totalvalue) %>%
mutate(lon=longitude/1e6,lat=latitude/1e6, logtax = log10(tax_totalvalue)) %>%
select(id_parcel,lat,lon, logtax) %>%
left_join(df_transactions,by="id_parcel")
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE, clusterOptions = markerClusterOptions(), radius=logtax %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE, clusterOptions = markerClusterOptions(), radius=logtax) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE, radius=logtax) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE, clusterOptions = markerClusterOptions(), radius=10) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
clusterOptions = markerClusterOptions(),
~ifelse(logtax >5, 6, 10)) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
#clusterOptions = markerClusterOptions(),
~ifelse(logtax >5, 6, 10)) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=TRUE
#clusterOptions = markerClusterOptions(),
#~ifelse(logtax >5, 6, 10)
) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=TRUE,
fillOpacity = 0.1
#clusterOptions = markerClusterOptions(),
#~ifelse(logtax >5, 6, 10)
) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.1
#clusterOptions = markerClusterOptions(),
#~ifelse(logtax >5, 6, 10)
) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.01
#clusterOptions = markerClusterOptions(),
#~ifelse(logtax >5, 6, 10)
) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05
#clusterOptions = markerClusterOptions(),
#~ifelse(logtax >5, 6, 10)
) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
radius = ~ifelse(logtax >5, 6, 10)
) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
clusterOptions = markerClusterOptions(),
radius = ~ifelse(logtax >5, 6, 10)
) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
clusterOptions = markerClusterOptions(),
radius = logtax
) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
radius = logtax
) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
radius = ~ifelse(logtax<5, 1,
ifelse(logtax<6,5,10)
)
) %>%
addMiniMap()
tmp$logtax
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
color = ~pal(viridis())
) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
color = viridis
) %>%
addMiniMap()
tmp$logtax
colorBin(viridis, tmp$logtax, bins = 7, pretty = TRUE, na.color = "#808080",
alpha = FALSE, reverse = FALSE)
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
colorBin(viridis, logtax, bins = 7, pretty = TRUE, na.color = "#808080",
alpha = FALSE, reverse = FALSE)
) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
colorBin(viridis, tmp$logtax, bins = 7, pretty = TRUE, na.color = "#808080",
alpha = FALSE, reverse = FALSE)
) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
colorNumeric(viridis, logtax)
) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
colorNumeric(viridis)
) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
colorNumeric(viridis, tmp$logtax)
) %>%
addMiniMap()
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
colorNumeric(viridis, ~logtax)
) %>%
addMiniMap()
pal <- colorNumeric(viridis, logtax)
pal <- colorNumeric(viridis, tmp$logtax)
pal <- colorNumeric(viridis, tmp$logtax)
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
~pal(logtax)
) %>%
addMiniMap()
pal <- colorBin(viridis, tmp$logtax)
pal <- colorBin(viridis, tmp$logtax)
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.05,
#clusterOptions = markerClusterOptions(),
~pal(logtax)
) %>%
addMiniMap()
pal <- colorBin(viridis, tmp$logtax)
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.5,
clusterOptions = markerClusterOptions(),
#~pal(logtax)
) %>%
addMiniMap()
tmp$logtax
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library(ggplot2)
library(DescTools)
library(lubridate)
library(plyr)
library(dplyr)
library(magrittr)
library(ggthemes)
library(data.table)
library(caret)
library(viridis)
library(leaflet)
theme_set(theme_economist_white())
options(scipen = 0)
df_properties <- readRDS('../output/raw_properties.rds')
df_transactions <- readRDS('../output/raw_train.rds')
#df_properties <- readRDS('../output/small_properties.rds')
#df_transactions <- readRDS('../output/small_train.rds')
#colname changes copied from Philipp Spachtholz's Exploratory Analysis - Zillow
# converted to data.tables setnames function instead of rename in dplyr
setnames(df_properties, old=c( 'parcelid',
'yearbuilt',
'basementsqft',
'yardbuildingsqft17',
'yardbuildingsqft26',
'poolsizesum',
'lotsizesquarefeet',
'garagetotalsqft',
'finishedfloor1squarefeet',
'calculatedfinishedsquarefeet',
'finishedsquarefeet6',
'finishedsquarefeet12',
'finishedsquarefeet13',
'finishedsquarefeet15',
'finishedsquarefeet50',
'unitcnt',
'numberofstories',
'roomcnt',
'bathroomcnt',
'bedroomcnt',
'calculatedbathnbr',
'fullbathcnt',
'threequarterbathnbr',
'fireplacecnt',
'poolcnt',
'garagecarcnt',
'regionidcounty',
'regionidcity',
'regionidzip',
'regionidneighborhood',
'fireplaceflag',
'hashottuborspa',
'buildingqualitytypeid',
'buildingclasstypeid',
'typeconstructiontypeid',
'decktypeid',
'storytypeid',
'heatingorsystemtypeid',
'airconditioningtypeid',
'architecturalstyletypeid',
'taxvaluedollarcnt',
'landtaxvaluedollarcnt',
'structuretaxvaluedollarcnt',
'assessmentyear'),
new=c('id_parcel',
'year_built',
'area_basement',
'area_patio',
'area_shed',
'area_pool',
'area_lot',
'area_garage',
'area_firstfloor_finished',
'area_total_calc',
'area_base',
'area_live_finished',
'area_liveperi_finished',
'area_total_finished',
'area_unknown',
'num_unit',
'num_story',
'num_room',
'num_bathroom',
'num_bedroom',
'num_bathroom_calc',
'num_bath',
'num_75_bath',
'num_fireplace',
'num_pool',
'num_garage',
'region_county',
'region_city',
'region_zip',
'region_neighbor',
'flag_fireplace',
'flag_tub',
'quality',
'framing',
'material',
'deck',
'story',
'heating',
'aircon',
'architectural_style',
'tax_totalvalue',
'tax_landvalue',
'tax_structurevalue',
'year_taxasessment'
)
)
#converts df_transactions
setnames(df_transactions, old = c('parcelid', 'transactiondate'),
new = c('id_parcel', 'date_of_transact')
)
df_transactions[, date_of_transact:= as.Date(date_of_transact)]
df_transactions[, month_of_transact:= month(date_of_transact)]
df_transactions[, year_of_transact:= year(date_of_transact)]
df_transactions[, year_month_transact:= make_date(year=year(date_of_transact),month=month(date_of_transact))]
#need to add unique() here
#transacts_per_year <- df_transactions[, N := uniqueN(id_parcel), by = year_month_transact]
transacts_per_year <- df_transactions[, .N, by = year_month_transact]
transacts_per_day <- df_transactions[, .N, by = date_of_transact]
ggplot(transacts_per_year,aes(x=year_month_transact,y=N)) + geom_bar(stat="identity", fill="dodgerblue2")
ggplot(transacts_per_day,aes(x=date_of_transact,y=N)) + geom_bar(stat="identity", fill="dodgerblue2")
long_tax <- melt(df_properties,
id.vars = c("id_parcel"),
measure.vars = c("tax_totalvalue", "tax_landvalue", "tax_structurevalue"),
variable.name = "tax_type",
value.name = "tax_value")
str(long_tax)
col_pal <- "Set1"
ggplot(long_tax, aes(x=tax_value, colour = tax_type)) +
geom_line(stat="density", size=1.2) +
theme_bw()+
scale_fill_brewer(palette=col_pal)+
scale_color_brewer(palette=col_pal) +
#stat_bin(binwidth = 50000) +
labs(title="Histogram for Price") +
scale_x_continuous(name = "tax_amount", breaks = 10^5*(0:12), limits = c(0, 10^6)) +
scale_y_continuous(name = "Frequency")
ggplot(df_properties, aes(tax_landvalue, tax_structurevalue))+
geom_hex(bins = 50) + coord_fixed() +
scale_fill_viridis() +
theme_bw() +
ggtitle("Frequency of Land vs. Structure Tax Value") +
theme(legend.position="right") +
xlim(0, 5*10^6) +
ylim(0, 5*10^6)
ggplot(df_properties, aes(tax_landvalue, tax_structurevalue))+
geom_hex(bins = 30) + coord_fixed() +
scale_fill_gradientn(name = "Log Count", trans = "log10",
breaks = 10^(0:6), colors = c("#440154","#21908d","#fde725")) +
theme_bw() +
ggtitle("Log Frequency Land vs. Structure Tax Value") +
theme(legend.position="right") +
xlim(0, 5*10^6) +
ylim(0, 5*10^6)
df_properties[,lat:= latitude/1e06]
df_properties[,lon:= longitude/1e06]
ggplot(df_properties, aes(lat, lon))+
geom_hex(bins = 200) + coord_fixed() +
scale_fill_gradientn(name = "Number of Properties",
breaks = 250*(0:8), colors = c("#440154","#21908d","#fde725")) +
theme_bw() +
ggtitle("Log Frequency Land vs. Structure Tax Value") +
theme(legend.position="right")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library(ggplot2)
library(DescTools)
library(lubridate)
library(plyr)
library(dplyr)
library(magrittr)
library(ggthemes)
library(data.table)
library(caret)
library(viridis)
library(leaflet)
theme_set(theme_economist_white())
options(scipen = 0)
df_properties[,lat:= latitude/1e06]
df_properties[,lon:= longitude/1e06]
ggplot(df_properties, aes(lat, lon))+
geom_hex(bins = 200) + coord_fixed() +
scale_fill_gradientn(name = "Number of Properties",
breaks = 250*(0:8), colors = c("#440154","#21908d","#fde725")) +
theme_bw() +
ggtitle("Log Frequency Land vs. Structure Tax Value") +
theme(legend.position="right")
#can't figure out colors yet
pal <- colorBin(viridis, tmp$logtax)
leaflet(tmp) %>%
addTiles() %>%
fitBounds(lon[1],lat[1],lon[2],lat[2]) %>%
addCircleMarkers(stroke=FALSE,
fillOpacity = 0.5,
clusterOptions = markerClusterOptions()
#~pal(logtax)
) %>%
addMiniMap()
